'''
функція - це спеціальна конструкція, за допомогою якої ми можемо написати якийсь код, який часто повторюється в нашій програмі і замість того, щоб дублювати його багато разів, ми можемо просто викликати цю конструкцію і цей код буде спрацьовувати. Тобто, ми опишемо логіку один раз, а використовувати будемо багато разів. Функція це незалежна підпрограма, яка повинна виконувати 1 дію.

def назва():
    тіло функції

() - це список параметрів

Для виклику функції(тобто, для запуску виконання коду цієї фукнції) потрібно просто напосати її назву і поставити дужки

назва() - це виклик фукнції, тут круглі дужки називаються списком аргументів

'''

def print_message():
    print("Hello world!!!")

print_message()
print_message()
print_message()
print_message()
print_message()


'''
Часто потрібно зробити так, щоб фукнціє не просто робила якусь дію, а й мала якийсь результат виконання, наприклад, результат математичного розрахунку і т. д. Для цього всередині функцій використовується спеціальний оператор return. По-перше, цей оператор моментально завершує виконання функції. По-друге, те, що буде написано після return буде вважатися результатом роботи цієї фукнції, це означає, що ми зможемо зберегти цей результат у змінну і використовувати далі у коді
'''

def get_number():
    print("Ця функція повертає цифру 5")
    return 5 

result = 10 + get_number() # 10 + 5 = 15

print(result)

'''
Часто фукнції працюють з вхідними данними із зовнішнього коду. Для цього ми можемо використовувати параметри і аргументи.

Наприклад:
'''

def sum(a, b): #a, b - це параметри, це спеціальні змінні, які доступні тільки всередині функції, у яких фактично зараз немає значення. Але постає питання, чому ж дорівнює параметр a та параметр b? Свої значення параметри отримують під час виклику функції при передачі аргументів.
    return a + b


print(sum(3, 9)) # 3, 9 - це аргументи, це спеціальні значення які передаються у фукнцію і стають значеннями параметрів фукнції. Порядок і кількість повинні бути збережені
print(sum(15, 7))
print(sum(999, 111))


'''
напішить фукнцію, яка в якості параметру очікує якусь строку і повертає її довжину(кількість символів у строці) зробити підрахунок символів за допомогою циклу for
'''

def str_length(str):
    print(str)

print(str_length("Hello")) # 5
print(str_length("Hello, my name is Alex!")) # 23